{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/EditUser/EditUser.js","data/fixtures.js","containers/Users/Users.jsx","hoc/Layout/Layout.js","App.js","index.js"],"names":["Header","className","to","Footer","href","withRouter","props","location","state","user","id","name","phone","email","country","age","editUser","useFormik","initialValues","onSubmit","values","pathname","changeUserHandler","handleSubmit","htmlFor","type","aria-describedby","required","getFieldProps","value","fixtures","Users","useState","sortValue","setSortValue","renderUsers","users","map","onClick","deleteUserHandler","e","preventDefault","onChange","target","sortBy","Layout","setUsers","newUsers","filter","prop","sort","a","b","role","exact","path","render","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87a728bf.chunk.js","sourcesContent":["import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nexport default function Header() {\n    return (\n        <header className=\"mb-3\">\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-secondary\">\n                <div className=\"container-fluid\">\n                    <NavLink className=\"navbar-brand\" to=\"/\">People</NavLink>\n                </div>\n            </nav>\n        </header>\n    );\n}","import React from \"react\";\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer mt-auto py-3 bg-secondary\">\n            <div className=\"container-fluid\">\n                <span className=\"text-light\">Сивак Максим 2021</span>\n                <a className='text-light float-right' href=\"mailto:jjestertt@gmail.com\">jjestertt@gmail.com</a>\n            </div>\n        </footer>\n    );\n}","import React from \"react\";\nimport {useFormik} from \"formik\";\nimport {withRouter} from \"react-router-dom\";\n\nfunction EditUser(props) {\n    //Получаем юзера из пропсов с помощью withRouter\n    const {id, name, phone, email, country, age} = props.location.state.user;\n\n    const editUser = useFormik({\n        initialValues: {\n            name: name,\n            phone: phone,\n            email: email,\n            country: country,\n            age: age\n        },\n        onSubmit: values => {\n            props.location.pathname = '/';\n            props.changeUserHandler(id, values);\n        }\n    });\n\n    return (\n        <form onSubmit={editUser.handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" className=\"form-control\" id=\"name\" aria-describedby=\"name\" required\n                       {...editUser.getFieldProps('name')}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"Phone\">Phone</label>\n                <input type=\"text\" className=\"form-control\" id=\"phone\" aria-describedby=\"phone\" required\n                       {...editUser.getFieldProps('phone')}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"email\" required\n                       {...editUser.getFieldProps('email')}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"country\">Country</label>\n                <select className=\"custom-select\" id=\"country\" required\n                        {...editUser.getFieldProps('country')}>\n                    <option value='Russia' >Russia</option>\n                    <option value=\"USA\">USA</option>\n                    <option value=\"Australia\">Australia</option>\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"age\">Age</label>\n                <input type=\"text\" className=\"form-control\" id=\"age\" aria-describedby=\"age\"\n                       {...editUser.getFieldProps('age')}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Change</button>\n        </form>\n    );\n}\n\nexport default withRouter(EditUser);","//This is fake data for project\nconst fixtures = [\n    {\n        id: 1,\n        name: 'Сергей Петров',\n        phone: '+79520591333',\n        email: 'sergeooo@gmail.com',\n        country: 'Russia',\n        age: '99',\n    },\n    {\n        id: 2,\n        name: 'Jonny Fake',\n        phone: '+612556893',\n        email: 'jonnyfake@gmail.com',\n        country: 'Australia',\n        age: '38',\n    },\n    {\n        id: 3,\n        name: 'Valery Jeferson',\n        phone: '+16357454235432',\n        email: 'valeryvalery@gmail.com',\n        country: 'Australia',\n        age: '17',\n    },\n    {\n        id: 4,\n        name: 'Kevin Jey',\n        phone: '+153463534',\n        email: 'kevinjey@usa.usa',\n        country: 'USA',\n        age: '22',\n    },\n    {\n        id: 5,\n        name: 'Георгий Васильев',\n        phone: '+72224443355',\n        email: 'georgy@yandex.ru',\n        country: 'Russia',\n        age: '15',\n    },\n];\n\nexport default fixtures;","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Users(props) {\n    const [sortValue, setSortValue] = useState('id');\n\n    const onChangeSort = (value) => {\n        setSortValue(value);\n        props.sortBy(value);\n    }\n\n\n    //Метод map перебирает всех персон в массиве\n    // и возвращает массив но уже с нужным нам jsx\n    const renderUsers = props.users.map(user => (\n        <tr key={user.id}>\n            <td>{user.id}</td>\n            <td>{user.name}</td>\n            <td>{user.email}</td>\n            <td>{user.country}</td>\n            <td>{user.age}</td>\n            <td>\n                <button className=\"btn btn-sm btn-danger mr-1\" onClick={() => {\n                    props.deleteUserHandler(user.id)\n                }}>Del\n                </button>\n                {/*Предаем нашего юзера в компонент редактирования*/}\n                <Link className=\"btn btn-sm btn-primary mr-1\"\n                      to={{\n                          pathname: '/edit',\n                          state: {\n                              user\n                          }\n                      }}\n                >\n                    Edit\n                </Link>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <>\n            <h1>User Data</h1>\n            <form className=\"mb-3 text-right\" onSubmit={e => e.preventDefault()}>\n                <div className=\"form-row d-flex justify-content-end\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"country\">Sort by</label>\n                        <select className=\"custom-select\" id=\"country\" required\n                                value={sortValue} onChange={e => {\n                            onChangeSort(e.target.value)\n                        }}\n                        >\n                            <option value='id'>Id</option>\n                            <option value=\"name\">Name</option>\n                            <option value=\"age\">Age</option>\n                        </select>\n                    </div>\n                </div>\n            </form>\n            <table className=\"table table-striped table-sm mb-3\">\n                <thead>\n                <tr>\n                    <th>id</th>\n                    <th>Name</th>\n                    <th>Phone</th>\n                    <th>Country</th>\n                    <th>Age</th>\n                    <th>Buttons</th>\n                </tr>\n                </thead>\n                <tbody>\n                {renderUsers}\n                </tbody>\n            </table>\n        </>\n\n    );\n}","import React, {useState} from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport EditUser from \"../../components/EditUser/EditUser\";\nimport {Switch, Route} from \"react-router-dom\";\nimport fixtures from \"../../data/fixtures\";\nimport Users from \"../../containers/Users/Users\";\n\nexport default function Layout(){\n    const [users, setUsers] = useState(fixtures);\n\n    //Удаляем юзера\n    const deleteUserHandler = (id) => {\n        const newUsers = users.filter(user => user.id !== id);\n        setUsers(newUsers);\n    }\n    //Изменение данных юзера\n    const changeUserHandler = (id, values) => {\n        const newUsers = users.map(user => {\n            if (user.id === id) {\n                return {\n                    id,\n                    ...values\n                }\n            }\n            return user;\n        });\n        setUsers(newUsers);\n    }\n    //Сортировка массива юзеров по свойству\n    const sortBy = (prop) => {\n        const newUsers = [...users];\n        newUsers.sort(function (a, b) {\n            if (a[prop] > b[prop]) {\n                return 1;\n            }\n            if (a[prop] < b[prop]) {\n                return -1;\n            }\n            // a должно быть равным b\n            return 0;\n        });\n        setUsers(newUsers);\n    }\n\n    return(\n        <>\n            <Header />\n                <main role=\"main\" className=\"container flex-shrink-0\">\n                    <Switch>\n                        <Route exact={true} path=\"/\" render={()=>\n                            <Users users={users} deleteUserHandler={deleteUserHandler}\n                                   sortBy={sortBy}\n                            />}\n                        />\n                        <Route path='/edit' render={()=> <EditUser changeUserHandler={changeUserHandler}/>} />\n                    </Switch>\n                </main>\n            <Footer />\n        </>\n    );\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Layout/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}